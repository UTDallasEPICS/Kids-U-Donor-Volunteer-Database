// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DB_URL")
}

model Constituent {
  ConstituentID      String        @id @default(uuid())
  Name               String
  Address            String
  EmailAddress       String?
  PhoneNumber        String?
  CompanySchoolName  String?
  volunteers         Volunteer[]
  donors             Donor[]
  organizations      Organization[]
}

model Volunteer {
  VolunteerID             String     @id @default(uuid())
  DOB                     DateTime    
  Age                     Int
  EmergencyContact        String?     
  EventsAttended          String[]    
  AgreementToMediaUse     Boolean?    
  TrainingCompletion      String?     
  Constituent             Constituent[]
  ConstituentID           String[]    
  VolunteerEvents         VolunteerEvent[]
}

model Donor {
  DonorID             String      @id @default(uuid())
  ContactPreference   String?  
  NotesResources      String?   
  Constituent         Constituent @relation(fields: [ConstituentID], references: [ConstituentID])
  ConstituentID       String      
  donations           Donation[]
}

model Donation {
  DonationID      String    @id @default(uuid())
  AmountDonated   Float     
  DateReceived    DateTime  
  FundingAreas    String[]  
  KidsUPrograms   String[]  
  DueDate         DateTime? 
  Donor           Donor     @relation(fields: [DonorID], references: [DonorID])
  DonorID         String    
}

model Organization {
  OrganizationID                 Int       @id @default(autoincrement())
  PositionInCompany              String?   
  WebsiteForFunder               String?   
  PortalForGrantApplication      String?   
  NotesAboutLoginInfo            String?   
  Constituent                    Constituent @relation(fields: [ConstituentID], references: [ConstituentID])
  ConstituentID                  String      
  grants                         Grant[]
}

model Grant {
  GrantID                   Int        @id @default(autoincrement())
  GrantName                 String
  Years                     Int
  FundingAreas              String[]
  KidsUProgram              String[]
  GrantOpeningDates         DateTime[]
  AskDate                   DateTime?
  AwardDate                 DateTime?
  ReportingDates            DateTime[]
  TypeOfReporting           String?
  DateToReapplyForGrant     DateTime?
  WaitingPeriodToReapply    Int?
  FundingRestrictions       String?
  AskAmount                 Float
  AmountAwarded             Float
  EndOfGrantReportDueDate   DateTime
  Organization              Organization @relation(fields: [OrganizationID], references: [OrganizationID])
  OrganizationID            Int          
}

model Event {
  EventID                 Int           @id @default(autoincrement())
  NameOfEvent             String
  Date                    DateTime
  Time                    DateTime
  VolunteersAttended      VolunteerEvent[]
}

model VolunteerEvent {
  ID                      Int           @id @default(autoincrement())
  Volunteer               Volunteer     @relation(fields: [VolunteerID], references: [VolunteerID])
  VolunteerID             String
  Event                   Event         @relation(fields: [EventID], references: [EventID])
  EventID                 Int
  LoginTime               DateTime
  LogoutTime              DateTime
  LoggedHours             Int
}
